<?php

namespace CodeCats\PanelBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function findFavoriteCategory($id)
    {
        $qb = $this->createQueryBuilder('u')
            ->select('u')->addSelect('p as progress')->addSelect('SUM(DATEDIFF(p.ended, p.started)) as time')
            ->leftJoin('u.progresses', 'p')->where('u.id = :id')->groupBy('p.id')->orderBy('time', 'DESC');
        $qb->setParameter('id', $id);

        echo $qb->getQuery()->getSQL();

        return $qb->getQuery()->getResult();
    }
    public function findProgressTime($id)
    {
        $qb = $this->createQueryBuilder('u')->select('u')->addSelect('SUM(DATEDIFF(p.ended, p.started)) as time')
            ->leftJoin('u.progresses', 'p')->where('u.id = :id');
        $qb->setParameter('id', $id);

        return $qb->getQuery()->getSingleResult();
    }
    /**
    SELECT *, sum(datediff(p.ended, p.started)) as progress_days FROM User u
    left join Progress p
    on  p.user_id = u.id
    group by u.id
    order by progress_days DESC
     *
     * @param int $max
     * @return array
     */
    public function findMostActive($max = 10)
    {
        $qb = $this->createQueryBuilder('u')
            ->select('u', 'p')->addSelect('SUM(DATEDIFF(p.ended, p.started)) as progress_days')
            ->leftJoin('u.progresses', 'p')->groupBy('u.id')->orderBy('progress_days', 'desc')->setMaxResults($max);

        return $qb->getQuery()->getResult();
    }
}
